# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node and pnpm 🚀
        # Node.jsとpnpmを同時にセットアップ
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # 🔽 pnpm を有効にする 🔽
          cache: 'pnpm' 
          
      # pnpm は依存関係をグローバルにキャッシュするため、actions/cache ステップは不要になることが多いですが、
      # 確実性を高めるために残しても問題ありません (この例では削除します)。

      - name: Install Dependencies with pnpm
        # `pnpm install` は `npm ci` と同様にクリーンなインストールを提供し、
        # ネイティブモジュールに対する処理が優れています。
        run: pnpm install 

      - name: Build with pnpm
        # ビルドコマンドも pnpm を通して実行
        run: pnpm run build

      - name: Setup Pages
        # configure-pages はビルド後の適切な位置に置きます
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4